{"version":3,"sources":["assets/gif_loading.gif","component/landing-page/landing-main-page.js","component/loading/loading.js","component/new_page/new_page.js","component/loading/load.js","App.js","serviceWorker.js","js/reducers/home/home.js","js/constants/home/home.js","js-outils/API.js","js/reducers/auth/auth.js","js/constants/auth/auth.js","js/reducers/user-data/user-data.js","js/constants/user-data/user-data.js","js/reducers/chat/chat-normal.js","js/constants/chat/chat-normal.js","js/reducers/presentation/presentation-main.js","js/constants/presentation/presentation-main.js","js/reducers/index.js","js/store/store.js","index.js"],"names":["module","exports","Component","MainHome","props","state","className","src","require","class","MainHomex","connect","dispatch","md","alt","href","isLoading","setTimeout","setState","this","App","path","exact","component","Load","React","Boolean","window","location","hostname","match","initialState","articles","homeR","action","type","getUserDataInit","JSON","parse","sessionStorage","getItem","viewDataInfo","userID","username","email","password","mode","loading","authR","axios","post","then","response","console","log","setItem","stringify","data","token","catch","err","alert","payload","ref","expValue","level","wallet","grades","guilde","id","rank","data2","socket","socketIOClient","msgs","user","msg","msgValue","msgUser","list","push","emit","authentificate","added","title","desc","ad","combineReducers","homeConfig","authConfig","userR","userConfig","preR","presentationConfig","chatR","chatConfig","store","createStore","rootReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f399e359.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gif_loading.d831f2ac.gif\";","import React, { Component } from 'react';\r\n\r\n// css\r\nimport '../../styles/landing-page/landing-page-home.scss'\r\nimport '../../styles/landing-page/landing-body.scss'\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport 'react-awesome-button/dist/themes/theme-blue.css';\r\n\r\n\r\nclass MainHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n      }\r\n    componentDidMount(props){\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainHome","import React, { Component } from 'react';\r\nimport { MDBBtn, MDBContainer, MDBCol, MDBRow } from \"mdbreact\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText } from 'mdbreact';\r\n// css\r\nimport '../../styles/loading/loading.scss'\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    \r\n  };\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        \r\n    };\r\n  }\r\n  \r\n\r\nclass MainHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n      }\r\n    componentDidMount(props){\r\n        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"loading_builder\">\r\n                <div className=\"img_builder\">\r\n                    <img src={require(\"../../assets/gif_loading.gif\")} />\r\n                </div>\r\n                <div className=\"title_builder\">\r\n                    <h3>Please make sure to use the last version of Firefox or Google Chrome for a better experience</h3>\r\n                    <br/>\r\n                    <br/>\r\n                    <div class=\"spinner\">\r\n                        <div class=\"bounce1\"></div>\r\n                        <div class=\"bounce2\"></div>\r\n                        <div class=\"bounce3\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MainHomex = connect(mapStateToProps, mapDispatchToProps)(MainHome);\r\nexport default MainHomex;","import React, { Component } from 'react';\r\nimport { MDBBtn, MDBContainer, MDBCol, MDBRow } from \"mdbreact\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText } from 'mdbreact';\r\n// css\r\nimport '../../styles/new_page/new_page.scss'\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    \r\n  };\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        \r\n    };\r\n  }\r\n  \r\n\r\nclass MainHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n      }\r\n    componentDidMount(props){\r\n        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"bkground\">\r\n                    <div className=\"stars\"></div>\r\n                    <div className=\"twinkling\"></div>\r\n                    <div className=\"clouds\"></div>\r\n                </div>\r\n\r\n                <div className=\"newPage\">\r\n                    <div className=\"headd\">\r\n                        <div className=\"cc dd\">Contact</div>\r\n                        <div className=\"port dd\">Portfolio</div>\r\n                        <div className=\"sky dd\">Skypiea <label className=\"tt\">Welcome to my world</label></div>\r\n                        <div className=\"ab dd\">About me</div>\r\n                        <div className=\"cv dd\">CV</div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <MDBContainer className=\"body_page\">\r\n                    <MDBRow>\r\n                        <MDBCol md=\"3\">\r\n                        <div class=\"card\">\r\n                            <img\r\n                                src=\"https://www.goldenhotels.com/cobi/media/gh78/90/4f/covid19.png\"\r\n                                class=\"card-img-top\"\r\n                                alt=\"...\"\r\n                            />\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Covid test simulation</h5>\r\n                                <p class=\"card-text\">\r\n                                    Covid test simulation of the pendimic simulation with a NLP chat bot\r\n                                </p>\r\n                                <a href=\"#!\" class=\"btn btn-secondary bb\"> Get Access <i class=\"fas fa-angle-double-right\"></i>  </a>\r\n                            </div>\r\n                        </div>\r\n\r\n                        </MDBCol>\r\n                        <MDBCol md=\"3\">\r\n                        <div class=\"card\">\r\n                            <img\r\n                                src=\"https://cdn-cf.cfo.com/content/uploads/2019/12/GettyImages-930264196.jpg\"\r\n                                class=\"card-img-top\"\r\n                                alt=\"...\"\r\n                            />\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Cryptocurrency app</h5>\r\n                                <p class=\"card-text\">\r\n                                Cryptocurrency notification app that allows you to be updated with the crypto monaie changes\r\n                                </p>\r\n                                <a href=\"#!\" class=\"btn btn-secondary bb\"> Get Access <i class=\"fas fa-angle-double-right\"></i>  </a>\r\n                            </div>\r\n                        </div>\r\n\r\n                        </MDBCol>\r\n                        <MDBCol md=\"3\">\r\n                        <div class=\"card\">\r\n                            <img\r\n                                src=\"https://animalgardenbda.com/wp-content/uploads/2019/09/coming-soon.jpg\"\r\n                                class=\"card-img-top\"\r\n                                alt=\"...\"\r\n                            />\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">More app coming soon</h5>\r\n                                <p class=\"card-text\">\r\n                                More app are coming soon <br/><br/>\r\n                                </p>\r\n                                <a href=\"#!\" class=\"btn btn-danger bb\"> Not available yet  </a>\r\n                            </div>\r\n                        </div>\r\n\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n\r\n                    <MDBRow className=\"botom\">\r\n                        <label className=\"bb\"> @Copyright, made by Youcef ARAB</label>\r\n\r\n                    </MDBRow>\r\n\r\n                </MDBContainer>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst MainHomex = connect(mapStateToProps, mapDispatchToProps)(MainHome);\r\nexport default MainHomex;","import React, { Component } from 'react';\r\nimport { MDBBtn, MDBContainer, MDBCol, MDBRow } from \"mdbreact\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText } from 'mdbreact';\r\n// css\r\n// css\r\nimport '../../styles/landing-page/landing-page-home.scss'\r\nimport '../../styles/landing-page/landing-body.scss'\r\n// css\r\nimport '../../styles/home/home.scss'\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport 'react-awesome-button/dist/themes/theme-blue.css';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nimport Loading from \"./loading\"\r\nimport NewPage from \"../new_page/new_page\"\r\n\r\n\r\nclass MainHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading : true\r\n        };\r\n      }\r\n    componentDidMount(props){\r\n        setTimeout(() => {\r\n            this.setState({isLoading: false})\r\n        }, 1000)\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            this.state.isLoading ? <Loading {...this.props}/> : <NewPage {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainHome;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Landing from \"./component/landing-page/landing-main-page\" \r\nimport Load from \"./component/loading/load\"\r\n\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Route path=\"/\" exact component={Load} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { RENDER_PAGE } from \"../../constants/home/home\";\r\n\r\nconst initialState = {\r\n    articles: []\r\n  };\r\n\r\n\r\n\r\n  function homeR(state = initialState, action) {\r\n      switch(action.type){\r\n          case RENDER_PAGE:\r\n            return state;\r\n            \r\n        default:\r\n            return state;\r\n      }\r\n  };\r\n  export default homeR;","\r\nexport const RENDER_PAGE = \"RENDER_PAGE\";","import axios from 'axios'\r\n\r\nexport function getUserDataInit(){\r\n    const info = JSON.parse(sessionStorage.getItem('data_user'));\r\n    return info;\r\n};\r\n\r\nexport function viewDataInfo(){\r\n    const info = JSON.parse(sessionStorage.getItem('user_info'));\r\n    return info;\r\n};\r\n\r\nexport function clearSessionStorage(){\r\n    sessionStorage.clear();\r\n};\r\n\r\n\r\nexport function getPort(){\r\n\r\n    axios\r\n    .get('/adminPortDeploy')\r\n    .then(response => {\r\n        let port = response.data.test\r\n        console.log('port API => ' + port)\r\n        \r\n        return port;\r\n    })\r\n    .catch(err => {\r\n        console.log('err')\r\n        console.log(err)\r\n        \r\n        return null;\r\n    })\r\n}","import { SIGN_IN, SIGN_UP, HANDLE_CHANGE } from \"../../constants/auth/auth\";\r\nimport axios from 'axios'\r\nimport {server, port } from '../../../config'\r\nimport {getPort} from '../../../js-outils/API'\r\n\r\nconst initialState = {\r\n    userID : '',\r\n    username : '',\r\n    email : '',\r\n    password : '',\r\n    mode : true,\r\n    loading : true\r\n  };\r\n\r\n\r\n\r\n  function authR(state = initialState, action) {\r\n      switch(action.type){\r\n          case SIGN_IN:\r\n                var {password, username} = state\r\n                axios\r\n                    .post('/api/auth/login', {\r\n                        username, password\r\n                    })\r\n                    .then(response => {\r\n                        console.log(\"TRY TO LOG\")\r\n                        state.loading = false\r\n                        sessionStorage.setItem('data_user', JSON.stringify({\r\n                            userID : response.data.userID,\r\n                            token : response.data.token,\r\n                            username : response.data.username\r\n                        }))\r\n                    })\r\n                    .catch(err => {\r\n                        alert('auth failled')\r\n                        console.log(err)\r\n                    })\r\n\r\n            return state;\r\n\r\n        case SIGN_UP:\r\n            var {password, username, email} = state\r\n                axios\r\n                    .post('/api/auth/register', {\r\n                        username, email, password\r\n                    })\r\n                    .then(response => {\r\n                        state.loading = false\r\n                        sessionStorage.setItem('data_user', JSON.stringify({\r\n                            userID : response.data.userID,\r\n                            token : response.data.token,\r\n                            username : response.data.username\r\n                        }))\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                    })\r\n\r\n            return state;\r\n            \r\n        case HANDLE_CHANGE:\r\n            return {\r\n                ...state,\r\n                [action.payload.ref] : action.payload.data\r\n            };\r\n               \r\n        default:\r\n            return state;\r\n      }\r\n  };\r\n  export default authR;","\r\nexport const SIGN_IN = \"SIGN_IN\";\r\nexport const HANDLE_CHANGE = \"HANDLE_CHANGE\";\r\nexport const SIGN_UP = \"SIGN_UP\";","\r\nimport { GET_DATA, SET_DATA, HANDLE_CHANGE, VIEW_DATA } from \"../../constants/user-data/user-data\";\r\nimport axios from 'axios'\r\nimport {server, port } from '../../../config'\r\nimport {getUserDataInit, viewDataInfo} from '../../../js-outils/API'\r\n\r\n\r\nconst initialState = {\r\n    userID : '',\r\n    username : 'anonymous',\r\n    email : '',\r\n    expValue : 0,\r\n    level : 1,\r\n    wallet : 0,\r\n    grades : 'Vagabon',\r\n    guilde : 'N/A'\r\n  };\r\n\r\n\r\n\r\n  function authR(state = initialState, action) {\r\n      switch(action.type){\r\n          case GET_DATA:\r\n            var data = getUserDataInit()\r\n            var id = data.userID\r\n            axios\r\n                .post('/api/users/view', {\r\n                    id\r\n                })\r\n                .then(response => {\r\n                    state.loading = false\r\n                    sessionStorage.setItem('user_info', JSON.stringify({\r\n                        userID : response.data.userID,\r\n                        username : response.data.username,\r\n                        grades : response.data.grades,\r\n                        guilde : response.data.guilde,\r\n                        rank : response.data.rank,\r\n                        expValue : response.data.expValue,\r\n                        level : response.data.level,\r\n                    }))\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n\r\n            return state;\r\n\r\n        case SET_DATA:\r\n            var data = getUserDataInit()\r\n            var data2 = viewDataInfo()\r\n            return {\r\n                ...state,\r\n                username : data2.username,\r\n                grades: data2.grades,\r\n                rank: data2.rank,\r\n                expValue: data2.expValue,\r\n                level: data2.level,\r\n                guilde: data2.guilde,\r\n            };\r\n            \r\n        case HANDLE_CHANGE:\r\n                return {\r\n                    ...state,\r\n                    [action.payload.ref] : action.payload.data\r\n                };\r\n               \r\n        default:\r\n            return state;\r\n      }\r\n  };\r\n  export default authR;","\r\nexport const SET_DATA = \"SET_DATA\";\r\nexport const HANDLE_CHANGE = \"HANDLE_CHANGE\";\r\nexport const GET_DATA = \"GET_DATA\";\r\nexport const VIEW_DATA = \"VIEW_DATA\";","import { SET_MSG, GET_MSG, HANDLE_CHANGE, SOCKET_DATA_RECIEVE } from \"../../constants/chat/chat-normal\";\r\nimport {getUserDataInit, viewDataInfo} from '../../../js-outils/API'\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\n\r\nconst socket = socketIOClient();\r\n\r\nconst initialState = {\r\n    msgs: [\r\n      {\r\n        user: 'Chat bot',\r\n        msg: 'welcome to general chat'\r\n      }\r\n    ],\r\n    msgValue: '',\r\n    msgUser: ''\r\n  };\r\n\r\n\r\n\r\n  function homeR(state = initialState, action) {\r\n      switch(action.type){\r\n        \r\n        case SOCKET_DATA_RECIEVE:\r\n          var list = state.msgs\r\n          list.push({\r\n            user: action.payload.username,\r\n            msg: action.payload.msg\r\n          })\r\n          return {\r\n            ...state,\r\n            msgs: list\r\n          }\r\n        \r\n        case HANDLE_CHANGE:\r\n          return {\r\n              ...state,\r\n              [action.payload.ref] : action.payload.data\r\n          };\r\n\r\n        case SET_MSG:\r\n          var username = action.payload\r\n          var list = state.msgs\r\n\r\n\r\n          socket.emit('user-says', {\r\n            user: username,\r\n            msg: state.msgUser\r\n          })\r\n          list.push({\r\n            user: username,\r\n            msg: state.msgUser,\r\n          })\r\n          return {\r\n            ...state,\r\n            msgs: list,\r\n            msgUser: ''\r\n          }\r\n                      \r\n        default:\r\n            return state;\r\n      }\r\n  };\r\n  export default homeR;","\r\nexport const HANDLE_CHANGE = \"HANDLE_CHANGE\";\r\nexport const GET_MSG = \"GET_MSG\";\r\nexport const SET_MSG = \"SET_MSG\";\r\nexport const SOCKET_DATA_RECIEVE = \"SOCKET_DATA_RECIEVE\";","import { VIEW_PRE, CHANGE_MODE, ADD_PRES } from \"../../constants/presentation/presentation-main\";\r\nimport {getUserDataInit, viewDataInfo} from '../../../js-outils/API'\r\nimport axios from 'axios'\r\n\r\nconst initialState = {\r\n    authentificate: true,\r\n    added: true\r\n  };\r\n\r\n\r\n\r\n  function homeR(state = initialState, action) {\r\n      switch(action.type){\r\n          case VIEW_PRE:\r\n            return state;\r\n\r\n          case CHANGE_MODE:\r\n            return {\r\n              ...state,\r\n              authentificate : !state.authentificate\r\n            };\r\n          \r\n          case ADD_PRES:\r\n            var user = viewDataInfo().username\r\n            var title = action.payload.title\r\n            var desc = action.payload.desc\r\n            var ad = false\r\n            console.log(user + title + desc)\r\n\r\n            axios\r\n              .post('/api/pres/new', {\r\n                user, title, desc\r\n              })\r\n              .then(response => {\r\n                ad = true\r\n              })\r\n              .catch(err => {\r\n                console.log(\"error\")\r\n              })\r\n          setTimeout(() => {\r\n\r\n            return {\r\n              ...state,\r\n              added : ad\r\n            };\r\n          }, 500)\r\n            \r\n        default:\r\n            return state;\r\n      }\r\n  };\r\n  export default homeR;","\r\nexport const VIEW_PRE = \"VIEW_PRE\";\r\nexport const CHANGE_MODE = \"CHANGE_MODE\";\r\nexport const ADD_PRES = \"ADD_PRES\";","import { combineReducers } from 'redux'\r\nimport homeConfig from './home/home.js'\r\nimport authConfig from './auth/auth'\r\nimport userConfig from './user-data/user-data'\r\nimport chatConfig from './chat/chat-normal'\r\nimport presentationConfig from './presentation/presentation-main'\r\n\r\nexport default combineReducers({\r\n  homeR : homeConfig,\r\n  authR : authConfig,\r\n  userR : userConfig,\r\n  preR  : presentationConfig,\r\n  chatR : chatConfig\r\n})","    // src/js/store/index.js\r\nimport { createStore } from 'redux'\r\nimport rootReducer from \"../reducers/index\";\r\n\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./js/store/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    // The target element might be either root or app,\r\n    // depending on your development environment\r\n    // document.getElementById(\"app\")\r\n    document.getElementById(\"root\")\r\n  );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}